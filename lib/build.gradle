buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.1'
    }
}
apply plugin: 'com.android.library'

repositories {
    jcenter()
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        project.archivesBaseName = "com.davidparry.widgets"
        project.version = android.defaultConfig.versionName
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
    libraryVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.aar')) {
                def fileName = "${archivesBaseName}-v${version}.aar"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.1'

    compile 'com.android.support:support-v4:22.2.0'
    testCompile "junit:junit:4.10"
    testCompile "org.assertj:assertj-core:1.7.0"
    testCompile "org.robolectric:robolectric:3.0-rc3"
    testCompile "org.mockito:mockito-core:1.+"


}

afterEvaluate { project ->
    android.libraryVariants.each { variant ->
        // workaround for missing R class for aar dependencies
        tasks.getByName("assemble${variant.name.capitalize()}").dependsOn copyAppcompat
    }
}

// workaround the missing R class for aar dependencies
// original solution comes from https://github.com/robolectric/robolectric/issues/1737
// more dynamic solution is posted at https://github.com/robolectric/robolectric/issues/1796#issuecomment-101422012
// but this is for this specific project and until its fixed in robo
task copyAppcompat(type: Copy) {
    from 'build/generated/source/r/debug/com/davidparry/widgets'.replace("/", File.separator)
    into 'src/test/java/com/davidparry/widgets'.replace("/", File.separator)
    include 'R.java'
}